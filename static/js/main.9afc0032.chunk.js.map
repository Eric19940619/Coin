{"version":3,"sources":["reportWebVitals.js","components/MainNav.jsx","Context.js","components/SortButton.jsx","components/PercentBadge.jsx","components/CoinList.jsx","views/Home.jsx","views/Favorite.jsx","components/Chart.jsx","views/Coin.jsx","DB.js","Reducer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MainNav","Navbar","bg","variant","Nav","className","exact","to","Link","StateContext","createContext","SortButton","props","useState","iconReverse","setIconReverse","Sort","type","descending","sortingType","useEffect","onClick","children","icon","faSortUp","transform","rotate","PercentBadge","percent","Math","abs","round","CoinList","useContext","state","dispatch","data","sortList","setSortList","setSortingType","setDescending","sort","a","b","length","style","width","margin","Table","responsive","hover","map","item","market_cap_rank","id","symbol","image","name","current_price","price_change_percentage_24h","total_volume","circulating_supply","total_supply","coins","indexOf","payload","StarClickHandler","faStar","color","src","alt","marginRight","undefined","toUpperCase","ProgressBar","animated","now","Number","Home","setData","document","title","GetDataEverySecond","setInterval","axios","get","res","clearInterval","Favorite","favListData","setFavListData","list","filter","coin","forEach","push","Chart","days","size","prices","setPrices","volumes","setVolumes","dayLine","setDayLine","toLowerCase","priceList","volList","dayList","total_volumes","p","index","day","Date","getFullYear","getMonth","getDate","v","c3","generate","bindto","w","height","h","x","columns","axes","vol","types","price","colors","point","show","legend","axis","tick","format","y","label","text","position","y2","max","min","Coin","setDay","useParams","localization","market_data","ListGroup","Item","ath","atl","market_cap","ButtonGroup","toggle","val","ToggleButton","value","checked","onChange","e","DB","Load","key","JSON","parse","localStorage","getItem","Set","setItem","stringify","Reducer","action","splice","Error","initialState","App","useReducer","Provider","path","component","CoinDetails","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9afc0032.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Nav, Navbar } from \"react-bootstrap\"\r\n\r\nconst MainNav = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Nav className=\"m-auto\">\r\n        <LinkContainer exact to=\"/\">\r\n          <Nav.Link>首頁</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/favorite\">\r\n          <Nav.Link>我的最愛</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default MainNav\r\n","import { createContext } from \"react\"\r\nconst StateContext = createContext()\r\nexport default StateContext\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faSortUp } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst SortButton = (props) => {\r\n  const [iconReverse, setIconReverse] = useState(false)\r\n  const { Sort, type, descending, sortingType } = props\r\n\r\n  const SortClickHandler = () => {\r\n    Sort(type)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sortingType === type) {\r\n      if (descending === false) {\r\n        setIconReverse(true)\r\n      } else {\r\n        setIconReverse(false)\r\n      }\r\n    } else {\r\n      setIconReverse(false)\r\n    }\r\n  }, [descending, sortingType, type])\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n        onClick={() => SortClickHandler()}>\r\n        {props.children}\r\n        <FontAwesomeIcon\r\n          icon={faSortUp}\r\n          transform={iconReverse ? { rotate: 180 } : { rotate: 0 }}\r\n        />\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SortButton\r\n","const PercentBadge = ({ percent }) => {\r\n  return (\r\n    <>\r\n      <span\r\n        className={`badge +\r\n    ${percent > 0 ? \"bg-danger\" : \"bg-success\"}`}>\r\n        <span>{percent > 0 ? \"▲\" : \"▼\"} </span>\r\n        {Math.abs(Math.round(percent * 100)) / 100}%\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PercentBadge\r\n","import { Link } from \"react-router-dom\"\r\nimport { Table, ProgressBar } from \"react-bootstrap\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport StateContext from \"../Context\"\r\nimport SortButton from \"./SortButton\"\r\nimport PercentBadge from \"./PercentBadge\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst CoinList = (props) => {\r\n  const [state, dispatch] = useContext(StateContext)\r\n  const { data } = props\r\n  const [sortList, setSortList] = useState([])\r\n  const [sortingType, setSortingType] = useState(\"market_cap_rank\")\r\n  const [descending, setDescending] = useState(false)\r\n\r\n  const Sort = (type) => {\r\n    if (sortingType !== type) {\r\n      setSortingType(type)\r\n      setDescending(false)\r\n    } else {\r\n      if (descending === true) {\r\n        setDescending(false)\r\n      } else {\r\n        setDescending(true)\r\n      }\r\n    }\r\n\r\n    setSortList(\r\n      data.sort((a, b) => {\r\n        if (descending) return b[sortingType] - a[sortingType]\r\n        else return a[sortingType] - b[sortingType]\r\n      })\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSortList(\r\n      data.sort((a, b) => {\r\n        if (descending) return b[sortingType] - a[sortingType]\r\n        else return a[sortingType] - b[sortingType]\r\n      })\r\n    )\r\n  }, [data])\r\n\r\n  const StarClickHandler = (id) => {\r\n    if (state.coins.indexOf(id) < 0)\r\n      dispatch({ type: \"ADD\", payload: { id: id } })\r\n    else dispatch({ type: \"REMOVE\", payload: { id: id } })\r\n  }\r\n\r\n  return (\r\n    data.length > 0 && (\r\n      <div style={{ width: \"90%\", margin: \"20px auto\" }}>\r\n        <Table responsive hover>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>\r\n                <SortButton\r\n                  type=\"market_cap_rank\"\r\n                  Sort={Sort}\r\n                  descending={descending}\r\n                  sortingType={sortingType}>\r\n                  <h5 className=\"m-0\">Rank</h5>\r\n                </SortButton>\r\n              </th>\r\n              <th>\r\n                <h5 className=\"m-0\">貨幣名稱</h5>\r\n              </th>\r\n              <th>\r\n                <SortButton\r\n                  type=\"current_price\"\r\n                  Sort={Sort}\r\n                  descending={descending}\r\n                  sortingType={sortingType}>\r\n                  <h5 className=\"m-0\">現價(USD)</h5>\r\n                </SortButton>\r\n              </th>\r\n              <th>\r\n                <SortButton\r\n                  type=\"price_change_percentage_24h\"\r\n                  Sort={Sort}\r\n                  descending={descending}\r\n                  sortingType={sortingType}>\r\n                  <h5 className=\"m-0\">24hr%</h5>\r\n                </SortButton>\r\n              </th>\r\n              <th>\r\n                <SortButton\r\n                  type=\"total_volume\"\r\n                  Sort={Sort}\r\n                  descending={descending}\r\n                  sortingType={sortingType}>\r\n                  <h5 className=\"m-0\">交易量</h5>\r\n                </SortButton>\r\n              </th>\r\n              <th>\r\n                <SortButton\r\n                  type=\"circulating_supply\"\r\n                  Sort={Sort}\r\n                  descending={descending}\r\n                  sortingType={sortingType}>\r\n                  <h5 className=\"m-0\">供給量</h5>\r\n                </SortButton>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortList.map((item) => {\r\n              const {\r\n                market_cap_rank,\r\n                id,\r\n                symbol,\r\n                image,\r\n                name,\r\n                current_price,\r\n                price_change_percentage_24h,\r\n                total_volume,\r\n                circulating_supply,\r\n                total_supply\r\n              } = item\r\n              return (\r\n                <tr key={name}>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => {\r\n                        StarClickHandler(id)\r\n                      }}>\r\n                      <FontAwesomeIcon\r\n                        icon={faStar}\r\n                        color={\r\n                          state.coins.indexOf(id) < 0 ? \"#272727\" : \"#FF8800\"\r\n                        }\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                  <td>#{market_cap_rank}</td>\r\n                  <td>\r\n                    <Link to={`/coin/${id}`}>\r\n                      <img\r\n                        src={image}\r\n                        alt={symbol}\r\n                        style={{ width: \"20px\", marginRight: \"10px\" }}\r\n                      />\r\n                      {name} ({symbol})\r\n                    </Link>\r\n                  </td>\r\n                  <td>{current_price}</td>\r\n                  <td>\r\n                    <PercentBadge\r\n                      percent={price_change_percentage_24h}></PercentBadge>\r\n                  </td>\r\n                  <td>${total_volume}</td>\r\n                  <td>\r\n                    {circulating_supply}{\" \"}\r\n                    {symbol !== undefined && symbol.toUpperCase()}\r\n                    {total_supply > 0 && (\r\n                      <ProgressBar\r\n                        animated\r\n                        now={Number(circulating_supply / total_supply) * 100}\r\n                      />\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default CoinList\r\n","import CoinList from \"../components/CoinList\"\r\nimport { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst Home = () => {\r\n  let [data, setData] = useState([])\r\n  useEffect(() => {\r\n    document.title = \"虛擬貨幣\"\r\n\r\n    const GetDataEverySecond = setInterval(\r\n      () =>\r\n        axios\r\n          .get(\r\n            \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n          )\r\n          .then((res) => {\r\n            setData(res.data)\r\n          }),\r\n      500\r\n    )\r\n    return () => clearInterval(GetDataEverySecond)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"m-1 mt-3\">\r\n      <h2 className=\"text-center\">貨幣列表</h2>\r\n      <CoinList data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useEffect, useState, useContext } from \"react\"\r\nimport axios from \"axios\"\r\nimport CoinList from \"../components/CoinList\"\r\nimport StateContext from \"../Context\"\r\n\r\nconst Favorite = () => {\r\n  const [state] = useContext(StateContext)\r\n\r\n  const [favListData, setFavListData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const GetDataEverySecond = setInterval(\r\n      () =>\r\n        axios\r\n          .get(\r\n            \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n          )\r\n          .then((res) => {\r\n            let list = []\r\n\r\n            state.coins.filter((coin) => {\r\n              return res.data.forEach((item) => {\r\n                if (item.id === coin) list.push(item)\r\n              })\r\n            })\r\n            setFavListData(list)\r\n          }),\r\n      500\r\n    )\r\n    return () => clearInterval(GetDataEverySecond)\r\n  }, [state.coins])\r\n\r\n  return (\r\n    <div className=\"m-1 mt-3\">\r\n      <h2 className=\"text-center\">收藏的虛擬貨幣</h2>\r\n      {favListData.length > 0 && <CoinList data={favListData} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Favorite\r\n","import { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport c3 from \"c3\"\r\nimport \"c3/c3.css\"\r\n\r\nconst Chart = (props) => {\r\n  const { id, days, size } = props\r\n  const [prices, setPrices] = useState([])\r\n  const [volumes, setVolumes] = useState([])\r\n  const [dayLine, setDayLine] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/coins/${id.toLowerCase()}/market_chart?vs_currency=usd&days=${days}}&interval=daily`\r\n      )\r\n      .then((res) => {\r\n        const priceList = []\r\n        const volList = []\r\n        const dayList = []\r\n        const { prices, total_volumes } = res.data\r\n\r\n        prices.forEach((p, index) => {\r\n          if (index !== prices.length - 2) {\r\n            let day = new Date(p[0])\r\n            dayList.push(\r\n              `${day.getFullYear()}-${day.getMonth() + 1}-${day.getDate()}`\r\n            )\r\n            priceList.push(p[1])\r\n          }\r\n        })\r\n\r\n        total_volumes.forEach((v, index) => {\r\n          if (index !== prices.length - 2) {\r\n            volList.push(v[1])\r\n          }\r\n        })\r\n\r\n        setDayLine(dayList)\r\n        setPrices(priceList)\r\n        setVolumes(volList)\r\n      })\r\n  }, [id, days])\r\n\r\n  useEffect(() => {\r\n    c3.generate({\r\n      bindto: \"#chart\",\r\n      size: {\r\n        width: size.w,\r\n        height: size.h\r\n      },\r\n      data: {\r\n        x: \"x\",\r\n        columns: [\r\n          [\"x\", ...dayLine],\r\n          [\"vol\", ...volumes],\r\n          [\"price\", ...prices]\r\n        ],\r\n\r\n        axes: {\r\n          vol: \"y2\"\r\n        },\r\n        types: {\r\n          price: \"line\",\r\n          vol: \"bar\"\r\n        },\r\n        colors: {\r\n          price: \"#CE0000\",\r\n          vol: \"#46A3FF\"\r\n        }\r\n      },\r\n      point: {\r\n        show: false\r\n      },\r\n      legend: {\r\n        show: true\r\n      },\r\n      axis: {\r\n        x: {\r\n          show: true,\r\n          type: \"timeseries\",\r\n          tick: {\r\n            format: \"\"\r\n          }\r\n        },\r\n        y: {\r\n          show: false,\r\n\r\n          label: {\r\n            text: \"價格\",\r\n            position: \"outer-middle\"\r\n          }\r\n        },\r\n        y2: {\r\n          show: false,\r\n          max: Math.max(...volumes),\r\n          min: Math.min(...volumes),\r\n          label: {\r\n            text: \"成交量\",\r\n            position: \"outer-middle\"\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }, [prices, volumes, dayLine, size])\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"chart\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import Chart from \"../components/Chart\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { ButtonGroup, ToggleButton, ListGroup } from \"react-bootstrap\"\r\nimport PercentBadge from \"../components/PercentBadge\"\r\n\r\nconst Coin = () => {\r\n  const [data, setData] = useState({})\r\n  const [day, setDay] = useState(7)\r\n\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api.coingecko.com/api/v3/coins/${id}`).then((res) => {\r\n      setData(res.data)\r\n      document.title = `虛擬貨幣 - ${res.data.localization[\"zh-tw\"]}`\r\n    })\r\n  }, [id])\r\n\r\n  const { symbol, localization, market_data } = data\r\n  return (\r\n    <div className=\"text-center m-3\">\r\n      <ListGroup variant=\"flush\">\r\n        <ListGroup.Item>\r\n          <h2>\r\n            {localization === undefined\r\n              ? \"\"\r\n              : `${localization[\"zh-tw\"]}(${symbol})`}\r\n            <span className=\"m-3\">\r\n              {market_data === undefined\r\n                ? \"\"\r\n                : `US$ ${market_data.current_price[\"usd\"]}`}\r\n            </span>\r\n            {market_data === undefined ? (\r\n              \"\"\r\n            ) : (\r\n              <PercentBadge percent={market_data.price_change_percentage_24h} />\r\n            )}\r\n          </h2>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <h5 className=\"m-4\">\r\n            {market_data === undefined\r\n              ? \"\"\r\n              : `歷史最高價 $ ${market_data.ath[\"usd\"]} `}\r\n          </h5>\r\n          <h5 className=\"m-4\">\r\n            {market_data === undefined\r\n              ? \"\"\r\n              : `歷史最低價 $ ${market_data.atl[\"usd\"]}`}\r\n          </h5>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <h5 className=\"m-4\">\r\n            {market_data === undefined\r\n              ? \"\"\r\n              : `總市值排行 #${market_data.market_cap_rank}`}\r\n          </h5>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <h5 className=\"m-4\">\r\n            {market_data === undefined\r\n              ? \"\"\r\n              : `總市值 $ ${market_data.market_cap[\"usd\"]}`}\r\n          </h5>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <div className=\"m-2\">\r\n            <ButtonGroup toggle>\r\n              {[7, 10, 30].map((val) => {\r\n                return (\r\n                  <ToggleButton\r\n                    key={val}\r\n                    type=\"radio\"\r\n                    variant=\"secondary\"\r\n                    name=\"radio\"\r\n                    value={val}\r\n                    checked={day === val}\r\n                    onChange={(e) => setDay(val)}>\r\n                    {val}日\r\n                  </ToggleButton>\r\n                )\r\n              })}\r\n            </ButtonGroup>\r\n            <div className=\"mt-3\">\r\n              <h4>近{day}日走勢</h4>\r\n              {id !== \"\" && (\r\n                <Chart id={id} days={day} size={{ w: 380, h: 250 }} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coin\r\n","const DB = {\r\n  Load: (key) => {\r\n    return JSON.parse(localStorage.getItem(key)) || []\r\n  },\r\n  Set: (item) => {\r\n    localStorage.setItem(item.key, JSON.stringify(item.value))\r\n  }\r\n}\r\n\r\nexport default DB\r\n","import DB from \"./DB\"\r\n\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      if (state.coins.indexOf(action.payload.id) < 0) {\r\n        let coins = [...state.coins, action.payload.id]\r\n        DB.Set({ key: \"coins\", value: coins })\r\n        return { coins: coins }\r\n      } else return { coins: state.coins }\r\n    case \"REMOVE\":\r\n      let index = state.coins.indexOf(action.payload.id)\r\n      let coins = state.coins\r\n      coins.splice(index, 1)\r\n      DB.Set({ key: \"coins\", value: coins })\r\n      return { coins: coins }\r\n\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nexport default Reducer\r\n","import { Route, Switch } from \"react-router-dom\"\r\n\r\nimport MainNav from \"./components/MainNav\"\r\nimport Home from \"./views/Home\"\r\nimport Favorite from \"./views/Favorite\"\r\nimport CoinDetails from \"./views/Coin\"\r\nimport StateContext from \"./Context\"\r\nimport Reducer from \"./Reducer\"\r\nimport \"./Style.css\"\r\nimport { useReducer } from \"react\"\r\nimport DB from \"./DB\"\r\n\r\nconst coins = DB.Load(\"coins\")\r\n\r\nconst initialState = { coins: coins }\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(Reducer, initialState)\r\n\r\n  return (\r\n    <>\r\n      <StateContext.Provider value={[state, dispatch]}>\r\n        <MainNav></MainNav>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/coin/:id\" component={CoinDetails} />\r\n          <Route path=\"/favorite\" component={Favorite} />\r\n        </Switch>\r\n      </StateContext.Provider>\r\n    </>\r\n  )\r\n}\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { HashRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}